import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,o as e,e as o}from"./app-Cf3EX0dW.js";const c={},r=o('<h1 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式"><span>正则表达式</span></a></h1><p>正则表达式(regular expression)简称regex。<br></p><h2 id="匹配单个字符" tabindex="-1"><a class="header-anchor" href="#匹配单个字符"><span>匹配单个字符</span></a></h2><p>语法:</p><ul><li><code>.</code>可以匹配任意字符，包括<code>.</code>字符本身，如果只要匹配<code>.</code>一个字符，要使用转移<code>\\.</code></li><li><code>[ns]</code>分别匹配n和s。和的意思。<code>[0-9]</code>匹配0-9,<code>[a-z]</code>匹配a-z []定义了一个字符集合</li><li><code>^</code>对字符集合进行取非操作</li><li><code>[\\u4e00-\\u9fa5]</code>匹配任意一个汉字</li></ul><table><thead><tr><th>元字符</th><th>说明</th></tr></thead><tbody><tr><td><code>[\\b]</code></td><td>回退(并删除)一个字符(Backspace键)</td></tr><tr><td><code>\\f</code></td><td>换页符</td></tr><tr><td><code>\\n</code></td><td>换行符</td></tr><tr><td><code>\\r</code></td><td>回车符</td></tr><tr><td><code>\\t</code></td><td>制表符(Tap键)</td></tr><tr><td><code>\\v</code></td><td>垂直制表符</td></tr><tr><td><code>^</code></td><td>字符串的开始</td></tr><tr><td><code>$</code></td><td>字符串的结束</td></tr></tbody></table><p>数字字母空白元字符</p><table><thead><tr><th>元字符</th><th>说明</th></tr></thead><tbody><tr><td><code>\\d</code></td><td>任何一个数字字符(等价于<code>[0-9]</code>)</td></tr><tr><td><code>\\D</code></td><td>任何一个非数字字符(等价<code>[\\^0-9]</code>)</td></tr><tr><td><code>\\w</code></td><td>任何一个字母数字字符(大小写均可)或下划线字符(等价于<code>[a-zA-Z0-9]</code>)</td></tr><tr><td><code>\\W</code></td><td>任何一个非字母数字或下划线字符等价于<code>(^a-zA-Z0-9)</code></td></tr><tr><td><code>\\s</code></td><td>任何一个空白字符(等价于<code>[\\f\\n\\r\\t\\v]</code>)</td></tr><tr><td><code>\\S</code></td><td>任何一个非空白字符(等价于<code>[\\^\\f\\n\\r\\t\\v]</code>)</td></tr></tbody></table><p><em><strong>使用POSIX字符</strong></em></p><p>并不是所有正则表达式都支持，最好查一下是否支持。</p><table><thead><tr><th>字符类</th><th>说明</th></tr></thead><tbody><tr><td><code>[:alnum:]</code></td><td>任何一个字母或数字<code>[a-zA-Z0-9]</code></td></tr><tr><td><code>[:alpha:]</code></td><td>任何一个字母<code>[a-zA-Z]</code></td></tr><tr><td><code>[:blank:]</code></td><td>空格或制表符<code>[\\t]</code></td></tr></tbody></table><p><sup>并未列举全自行百度</sup></p><h2 id="匹配多个字符" tabindex="-1"><a class="header-anchor" href="#匹配多个字符"><span>匹配多个字符</span></a></h2><p><code>\\w</code>只能匹配单个字符<br></p><p>要想匹配同一个字符(或字符集合)的多次重复，只需要加上+后缀即可。<br></p><ul><li><code>+</code>匹配一个或多个字符(至少一个，不匹配零个字符的情况)</li></ul><p><code>[\\w]+@[\\w\\.]+</code>匹配多层域名的情况</p><p>1qwe@daf.c2m.co.ko</p><ul><li><code>*</code>匹配零个或多个字符</li></ul><p>可以理解为在&quot;我&quot;前面的字符是可选的。</p><ul><li>匹配0个或一个字符</li></ul><p><code>https?</code>&quot;我&quot;前面的字符要么不出现要么出现一次。</p><h2 id="常用的总结" tabindex="-1"><a class="header-anchor" href="#常用的总结"><span>常用的总结</span></a></h2><p>常用的元字符</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td><code>^</code></td><td>匹配字符串的开始</td></tr><tr><td><code>$</code></td><td>匹配字符串的结束</td></tr><tr><td><code>\\s</code></td><td>匹配任意的空白符</td></tr><tr><td><code>\\w</code></td><td>匹配任意的字母数字下划线或汉字</td></tr><tr><td><code>\\d</code></td><td>匹配数字</td></tr><tr><td><code>？</code></td><td>匹配前面的字符零次或一次</td></tr><tr><td><code>+</code></td><td>匹配前面的字符一次或多次</td></tr><tr><td><code>*</code></td><td>匹配前面的字符零次或多次</td></tr><tr><td><code>{n}</code></td><td>匹配前面的字符n次</td></tr></tbody></table><p>续表</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td><code>{n,}</code></td><td>匹配前面的字符最少n次</td></tr><tr><td><code>{n,m}</code></td><td>匹配前面的字符最少n次最多m次</td></tr></tbody></table><p><code>(thir|four)th</code>匹配thirth或fourth</p><p><code>()</code>的第二个作用就是分组，也就是子表达式。</p>',29),a=[r];function l(n,p){return e(),d("div",null,a)}const s=t(c,[["render",l],["__file","正则表达式.html.vue"]]),u=JSON.parse('{"path":"/blogs/%E5%90%8E%E7%AB%AF/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式","tag":["正则表达式"],"category":["后端"],"description":"正则表达式 正则表达式(regular expression)简称regex。 匹配单个字符 语法: .可以匹配任意字符，包括.字符本身，如果只要匹配.一个字符，要使用转移\\\\. [ns]分别匹配n和s。和的意思。[0-9]匹配0-9,[a-z]匹配a-z []定义了一个字符集合 ^对字符集合进行取非操作 [\\\\u4e00-\\\\u9fa5]匹配任意一个汉字 ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/%E5%90%8E%E7%AB%AF/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"菜鸟拯救世界"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"正则表达式 正则表达式(regular expression)简称regex。 匹配单个字符 语法: .可以匹配任意字符，包括.字符本身，如果只要匹配.一个字符，要使用转移\\\\. [ns]分别匹配n和s。和的意思。[0-9]匹配0-9,[a-z]匹配a-z []定义了一个字符集合 ^对字符集合进行取非操作 [\\\\u4e00-\\\\u9fa5]匹配任意一个汉字 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"菜鸟拯救世界"}],["meta",{"property":"article:tag","content":"正则表达式"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"菜鸟拯救世界\\",\\"url\\":\\"#\\"}]}"]]},"headers":[{"level":2,"title":"匹配单个字符","slug":"匹配单个字符","link":"#匹配单个字符","children":[]},{"level":2,"title":"匹配多个字符","slug":"匹配多个字符","link":"#匹配多个字符","children":[]},{"level":2,"title":"常用的总结","slug":"常用的总结","link":"#常用的总结","children":[]}],"git":{},"readingTime":{"minutes":2.29,"words":686},"filePathRelative":"blogs/后端/正则表达式.md","excerpt":"\\n<p>正则表达式(regular expression)简称regex。<br></p>\\n<h2>匹配单个字符</h2>\\n<p>语法:</p>\\n<ul>\\n<li><code>.</code>可以匹配任意字符，包括<code>.</code>字符本身，如果只要匹配<code>.</code>一个字符，要使用转移<code>\\\\.</code></li>\\n<li><code>[ns]</code>分别匹配n和s。和的意思。<code>[0-9]</code>匹配0-9,<code>[a-z]</code>匹配a-z []定义了一个字符集合</li>\\n<li><code>^</code>对字符集合进行取非操作</li>\\n<li><code>[\\\\u4e00-\\\\u9fa5]</code>匹配任意一个汉字</li>\\n</ul>","autoDesc":true}');export{s as comp,u as data};
